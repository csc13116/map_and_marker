version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-23
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      # - setup_remote_docker: # for faster builds
         # docker_layer_caching: true
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions # if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build debug APK and release APK
          command: |
            ./gradlew :app:assembleDebug
            # ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: "Copy APK files" # for release
          command: |
            mkdir -p /tmp/artifacts
            cp app/build/outputs/apk/debug/app-debug.apk /tmp/artifacts
            # cp app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk /tmp/artifacts
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/artifacts
      - persist_to_workspace:
          root: /tmp/artifacts
          paths:
            - app-debug.apk
            # - app-debug-androidTest.apk
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
  # See https://circleci.com/blog/publishing-to-github-releases-via-circleci/ for deploy examples
  publish-github-release:
    docker:
      - image: cibuilds/github
    steps:
      - attach_workspace:
          at: /tmp/artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(date +%Y%m%d_%H%M%S)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} /tmp/artifacts/
workflows:
  version: 2
  main:
    jobs:
      - build
      - publish-github-release:
          requires:
            - build
